rest:
  listenAddr: ":8001"
  pg:
    connString: "host=db-postgresql port=5432 user=pgo password=pgopw dbname=main sslmode=prefer" # container
    # connString: "host=localhost port=5432 user=pgo password=pgopw dbname=main sslmode=prefer"   # local
  oidc:
    issuer: https://iam.EDGE_DOMAIN_ROOT
    # issuer: http://127.0.0.1:5556/dex
    skipTLSVerify: true                             # for testing only
    clientID: PGO_REST_OIDC_CLIENT_ID               # manually obtain
    clientSecret: PGO_REST_OIDC_CLIENT_SECRET       # from zitadel UI
    # clientID: oauth2-proxy
    # clientSecret: ZXhhbXBsZS1hcHAtc2VjcmV0
    roleClaimKey: .policy.pgrole
  basicAuth: {}
  anonRole: anon
  omitempty: true  # omits NULL values in JSON response

pipeline:
  peers:
  - name: db-postgresql-zitadel
    connector: postgres
    config:
      connString: "host=db-postgresql port=5432 user=postgres password=postgrespw dbname=zitadel sslmode=prefer replication=database"
      replication:
        tables: ["projections.users14"]
  - name: db-postgresql-main
    connector: postgres
    config:
      connString: "host=db-postgresql port=5432 user=postgres password=postgrespw dbname=main sslmode=prefer"
  - name: debug # logs CDC events to stdout
    connector: debug
  pipelines:
  - name: sync-users-from-zitadel-to-main
    sources:
    - name: db-postgresql-zitadel
    sinks:
    - name: debug
    - name: db-postgresql-main
      transformations:
      - type: filter
        config:
          operations: ["c"] # c=create/insert, u=update, d=delete, r=read/select
      - type: extract
        config:
          fields: ["id"]
      - type: replace
        config:
          schemas:
            projections: iam
          tables:
            users14: users
