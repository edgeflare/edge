static_resources:
  listeners:
  - name: http_listener
    address:
      socket_address:
        address: 0.0.0.0
        port_value: 10080
    filter_chains:
    - filters:
      - name: envoy.filters.network.http_connection_manager
        typed_config:
          "@type": "type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager"
          codec_type: AUTO
          stat_prefix: ingress_http
          http2_protocol_options:
            max_concurrent_streams: 100
            initial_stream_window_size: 65536
            initial_connection_window_size: 1048576
          route_config:
            name: local_route_http
            virtual_hosts:
            - name: iam_zitadel
              domains: ["iam.EDGE_DOMAIN_ROOT"]
              routes:
              - match:
                  prefix: "/"
                route:
                  cluster: zitadel_service
            - name: pgo_rest
              domains: ["api.EDGE_DOMAIN_ROOT"]
              routes:
              - match: { prefix: "/" }
                route:
                  cluster: pgo_rest_service
            - name: minio_console_service
              domains: ["minio.EDGE_DOMAIN_ROOT"]
              routes:
              - match: { prefix: "/" }
                route:
                  cluster: minio_console_service
            - name: minio_s3_service
              domains: ["s3.EDGE_DOMAIN_ROOT"]
              routes:
              - match: { prefix: "/" }
                route:
                  cluster: minio_s3_service
            ignore_port_in_host_matching: true
          upgrade_configs:
          - upgrade_type: websocket
          http_filters:
          - name: envoy.filters.http.cors
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.filters.http.cors.v3.Cors
          - name: envoy.filters.http.router
            typed_config:
              "@type": "type.googleapis.com/envoy.extensions.filters.http.router.v3.Router"
  - name: https_listener
    address:
      socket_address:
        address: 0.0.0.0
        port_value: 10443
    filter_chains:
    - filters:
      - name: envoy.filters.network.http_connection_manager
        typed_config:
          "@type": "type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager"
          codec_type: AUTO
          stat_prefix: ingress_https
          http2_protocol_options:
            max_concurrent_streams: 100
            initial_stream_window_size: 65536
            initial_connection_window_size: 1048576
          route_config:
            name: local_route_https
            virtual_hosts:
            - name: iam_zitadel
              domains: ["iam.EDGE_DOMAIN_ROOT"]
              routes:
              - match:
                  prefix: "/"
                route:
                  cluster: zitadel_service
            ignore_port_in_host_matching: true
          upgrade_configs:
          - upgrade_type: websocket
          http_filters:
          - name: envoy.filters.http.router
            typed_config:
              "@type": "type.googleapis.com/envoy.extensions.filters.http.router.v3.Router"
      transport_socket:
        name: envoy.transport_sockets.tls
        typed_config:
          "@type": "type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.DownstreamTlsContext"
          common_tls_context:
            alpn_protocols: ["h2", "http/1.1"]
            tls_certificates:
            - certificate_chain:
                filename: "/etc/envoy/tls.crt"
              private_key:
                filename: "/etc/envoy/tls.key"
  clusters:
  - name: zitadel_service
    connect_timeout: 30s
    type: LOGICAL_DNS
    lb_policy: ROUND_ROBIN
    http2_protocol_options: {}
    load_assignment:
      cluster_name: zitadel_service
      endpoints:
      - lb_endpoints:
        - endpoint:
            address:
              socket_address:
                address: iam-zitadel
                port_value: 8080
  - name: pgo_rest_service
    connect_timeout: 0.25s
    type: LOGICAL_DNS
    typed_extension_protocol_options:
      envoy.extensions.upstreams.http.v3.HttpProtocolOptions:
        "@type": type.googleapis.com/envoy.extensions.upstreams.http.v3.HttpProtocolOptions
        explicit_http_config:
          http_protocol_options: {}
    lb_policy: round_robin
    load_assignment:
      cluster_name: pgo_rest_cluster
      endpoints:
      - lb_endpoints:
        - endpoint:
            address:
              socket_address:
                address: pgo-rest
                port_value: 8080
  - name: minio_console_service
    connect_timeout: 0.25s
    type: LOGICAL_DNS
    typed_extension_protocol_options:
      envoy.extensions.upstreams.http.v3.HttpProtocolOptions:
        "@type": type.googleapis.com/envoy.extensions.upstreams.http.v3.HttpProtocolOptions
        explicit_http_config:
          http_protocol_options: {}
    lb_policy: round_robin
    load_assignment:
      cluster_name: minio_console_cluster
      endpoints:
      - lb_endpoints:
        - endpoint:
            address:
              socket_address:
                address: s3-minio
                port_value: 9001
  - name: minio_s3_service
    connect_timeout: 0.25s
    type: LOGICAL_DNS
    typed_extension_protocol_options:
      envoy.extensions.upstreams.http.v3.HttpProtocolOptions:
        "@type": type.googleapis.com/envoy.extensions.upstreams.http.v3.HttpProtocolOptions
        explicit_http_config:
          http_protocol_options: {}
    lb_policy: round_robin
    load_assignment:
      cluster_name: minio_s3_cluster
      endpoints:
      - lb_endpoints:
        - endpoint:
            address:
              socket_address:
                address: s3-minio
                port_value: 9000
admin:
  address:
    socket_address:
      address: 0.0.0.0
      port_value: 9901
