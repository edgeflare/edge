version: '3.8'

services:
  db-postgres:
    image: docker.io/bitnami/postgresql:17
    environment:
      POSTGRES_HOST_AUTH_METHOD: md5
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgrespw
      POSTGRES_DB: main
      POSTGRESQL_WAL_LEVEL: logical
    ports:
    - 5432:5432
    volumes:
    - db-postgres:/bitnami/postgresql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  auth-zitadel:
    restart: always
    image: ghcr.io/zitadel/zitadel:latest
    command: 'start-from-init --masterkey MasterkeyNeedsToHave32Characters --tlsMode disabled'
    environment:
      ZITADEL_DATABASE_POSTGRES_HOST: db-postgres
      ZITADEL_DATABASE_POSTGRES_PORT: 5432
      ZITADEL_DATABASE_POSTGRES_DATABASE: main
      ZITADEL_DATABASE_POSTGRES_USER_USERNAME: zitadel
      ZITADEL_DATABASE_POSTGRES_USER_PASSWORD: zitadelpw
      ZITADEL_DATABASE_POSTGRES_USER_SSL_MODE: disable
      ZITADEL_DATABASE_POSTGRES_ADMIN_USERNAME: postgres
      ZITADEL_DATABASE_POSTGRES_ADMIN_PASSWORD: postgrespw
      ZITADEL_DATABASE_POSTGRES_ADMIN_SSL_MODE: disable
      ZITADEL_EXTERNALSECURE: false
    depends_on:
      db-postgres:
        condition: service_healthy
    ports:
    - 8080:8080 # zitadel-admin@zitadel.localhost  Password1!

  api-postgrest:
    image: docker.io/postgrest/postgrest:v12.2.3
    ports:
    - 3000:3000
    environment:
      PGRST_DB_URI: postgres://postgres:postgrespw@db-postgres:5432/main
      PGRST_OPENAPI_SERVER_PROXY_URI: http://0.0.0.0:3000
      PGRST_DB_ANON_ROLE: postgres
      PGRST_LOG_LEVEL: debug
    depends_on:
      db-postgres:
        condition: service_healthy

volumes:
  db-postgres:
