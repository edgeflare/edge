apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/instance: postgrest
    app.kubernetes.io/managed-by: edge
    app.kubernetes.io/name: postgrest
    app.kubernetes.io/version: v12.2.3
  name: postgrest
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: postgrest
      app.kubernetes.io/managed-by: edge
      app.kubernetes.io/name: postgrest
      app.kubernetes.io/version: v12.2.3
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: postgrest
        app.kubernetes.io/managed-by: edge
        app.kubernetes.io/name: postgrest
        app.kubernetes.io/version: v12.2.3
    spec:
      containers:
      - env:
        - name: PGRST_ADMIN_SERVER_PORT
          value: "3001"
        - name: PGRST_LOG_LEVEL
          value: info
        - name: PGRST_ROLE_CLAIM_KEY
          value: .policies.pgrole
        - name: PGRST_DB_ANON_ROLE
          value: anon
        - name: PGRST_DB_SCHEMAS
          value: public
        envFrom:
        - secretRef:
            name: example-pguser-postgrest
        image: docker.io/postgrest/postgrest:v12.2.3
        imagePullPolicy: IfNotPresent
        name: postgrest
        ports:
        - containerPort: 3000
          name: http
          protocol: TCP
        - containerPort: 3001
          name: http-admin
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /ready
            port: http-admin
            scheme: HTTP
          initialDelaySeconds: 5
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        resources:
          limits:
            cpu: 500m
            memory: 500Mi
          requests:
            cpu: 50m
            memory: 50Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          privileged: false
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/instance: postgrest
    app.kubernetes.io/managed-by: edge
    app.kubernetes.io/name: postgrest
    app.kubernetes.io/version: v12.2.3
  name: postgrest
spec:
  ports:
  - name: http
    port: 80
    protocol: TCP
    targetPort: 3000
  selector:
    app.kubernetes.io/instance: postgrest
    app.kubernetes.io/managed-by: edge
    app.kubernetes.io/name: postgrest
    app.kubernetes.io/version: v12.2.3
  sessionAffinity: None
  type: ClusterIP
---
apiVersion: gateway.networking.k8s.io/v1
kind: HTTPRoute
metadata:
  name: postgrest.example.local
spec:
  hostnames:
  - postgrest.example.local
  - api.example.local
  parentRefs:
  - group: gateway.networking.k8s.io
    kind: Gateway
    name: eg-default
    namespace: envoy-gateway-system
  rules:
  - backendRefs:
    - group: ""
      kind: Service
      name: postgrest
      port: 80
      weight: 1
    matches:
    - path:
        type: PathPrefix
        value: /
---
